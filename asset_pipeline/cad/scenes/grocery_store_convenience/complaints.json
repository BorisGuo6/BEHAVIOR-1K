[
    {
        "object": "bottle_of_pop-evcxlr",
        "message": "SYNSET: Confirm object synset assignment.\n\nObject assigned to synset: bottle__of__pop.n.01 (custom synset)\nDefinition: (hypernyms: grocery.n.02): (usually plural) consumer goods sold by a grocer\n\nReminder: synset should match the object and not its contents.\n(e.g., orange_juice.n.01 is the fluid orange juice and not a bottle).\nFor containers, note that usable containers (e.g. ones that have an open cap and\ncan be filled should be assigned to x__bottle.n.01 etc. synsets/categories while\nnon-usable containers should be assigned to bottle__of__x.n.01 etc. synsets/categories).\n\nIf the synset is wrong, please type in the name of the correct synset the object\nshould be assigned to. In the next question also type in the correct category.",
        "complaint": "can__of__soda.n.01",
        "processed": false,
        "new": true
    },
    {
        "object": "bottle_of_pop-evcxlr",
        "message": "CATEGORY: Confirm object category assignment.\n\nObject assigned to category: bottle_of_pop\n\nIf the object is not compatible with the rest of the objects in this category,\n(e.g. tabletop sink vs regular sink), change the category here.\nConfirm that the object is the same kind of object as the rest of the objects\nin this category.\n\nIf the category is wrong, please type in the correct category.",
        "complaint": "can__of__soda",
        "processed": false,
        "new": true
    },
    {
        "object": "bottle_of_pop-frewxk",
        "message": "SYNSET: Confirm object synset assignment.\n\nObject assigned to synset: bottle__of__pop.n.01 (custom synset)\nDefinition: (hypernyms: grocery.n.02): (usually plural) consumer goods sold by a grocer\n\nReminder: synset should match the object and not its contents.\n(e.g., orange_juice.n.01 is the fluid orange juice and not a bottle).\nFor containers, note that usable containers (e.g. ones that have an open cap and\ncan be filled should be assigned to x__bottle.n.01 etc. synsets/categories while\nnon-usable containers should be assigned to bottle__of__x.n.01 etc. synsets/categories).\n\nIf the synset is wrong, please type in the name of the correct synset the object\nshould be assigned to. In the next question also type in the correct category.",
        "complaint": "can__of__soda.n.01",
        "processed": false,
        "new": true
    },
    {
        "object": "bottle_of_pop-frewxk",
        "message": "CATEGORY: Confirm object category assignment.\n\nObject assigned to category: bottle_of_pop\n\nIf the object is not compatible with the rest of the objects in this category,\n(e.g. tabletop sink vs regular sink), change the category here.\nConfirm that the object is the same kind of object as the rest of the objects\nin this category.\n\nIf the category is wrong, please type in the correct category.",
        "complaint": "can__of__soda",
        "processed": false,
        "new": true
    },
    {
        "object": "bottle_of_pop-lugwcz",
        "message": "SYNSET: Confirm object synset assignment.\n\nObject assigned to synset: bottle__of__pop.n.01 (custom synset)\nDefinition: (hypernyms: grocery.n.02): (usually plural) consumer goods sold by a grocer\n\nReminder: synset should match the object and not its contents.\n(e.g., orange_juice.n.01 is the fluid orange juice and not a bottle).\nFor containers, note that usable containers (e.g. ones that have an open cap and\ncan be filled should be assigned to x__bottle.n.01 etc. synsets/categories while\nnon-usable containers should be assigned to bottle__of__x.n.01 etc. synsets/categories).\n\nIf the synset is wrong, please type in the name of the correct synset the object\nshould be assigned to. In the next question also type in the correct category.",
        "complaint": "can__of__soda.n.01",
        "processed": false,
        "new": true
    },
    {
        "object": "bottle_of_pop-lugwcz",
        "message": "CATEGORY: Confirm object category assignment.\n\nObject assigned to category: bottle_of_pop\n\nIf the object is not compatible with the rest of the objects in this category,\n(e.g. tabletop sink vs regular sink), change the category here.\nConfirm that the object is the same kind of object as the rest of the objects\nin this category.\n\nIf the category is wrong, please type in the correct category.",
        "complaint": "can_of_soda",
        "processed": false,
        "new": true
    },
    {
        "object": "bottle_of_pop-wbrrad",
        "message": "SYNSET: Confirm object synset assignment.\n\nObject assigned to synset: bottle__of__pop.n.01 (custom synset)\nDefinition: (hypernyms: grocery.n.02): (usually plural) consumer goods sold by a grocer\n\nReminder: synset should match the object and not its contents.\n(e.g., orange_juice.n.01 is the fluid orange juice and not a bottle).\nFor containers, note that usable containers (e.g. ones that have an open cap and\ncan be filled should be assigned to x__bottle.n.01 etc. synsets/categories while\nnon-usable containers should be assigned to bottle__of__x.n.01 etc. synsets/categories).\n\nIf the synset is wrong, please type in the name of the correct synset the object\nshould be assigned to. In the next question also type in the correct category.",
        "complaint": "can__of__soda.n.01",
        "processed": false,
        "new": true
    },
    {
        "object": "bottle_of_pop-wbrrad",
        "message": "CATEGORY: Confirm object category assignment.\n\nObject assigned to category: bottle_of_pop\n\nIf the object is not compatible with the rest of the objects in this category,\n(e.g. tabletop sink vs regular sink), change the category here.\nConfirm that the object is the same kind of object as the rest of the objects\nin this category.\n\nIf the category is wrong, please type in the correct category.",
        "complaint": "can_of_soda",
        "processed": false,
        "new": true
    },
    {
        "object": "bottle_of_pop-xmjfcg",
        "message": "SYNSET: Confirm object synset assignment.\n\nObject assigned to synset: bottle__of__pop.n.01 (custom synset)\nDefinition: (hypernyms: grocery.n.02): (usually plural) consumer goods sold by a grocer\n\nReminder: synset should match the object and not its contents.\n(e.g., orange_juice.n.01 is the fluid orange juice and not a bottle).\nFor containers, note that usable containers (e.g. ones that have an open cap and\ncan be filled should be assigned to x__bottle.n.01 etc. synsets/categories while\nnon-usable containers should be assigned to bottle__of__x.n.01 etc. synsets/categories).\n\nIf the synset is wrong, please type in the name of the correct synset the object\nshould be assigned to. In the next question also type in the correct category.",
        "complaint": "can__of__soda.n.01",
        "processed": false,
        "new": true
    },
    {
        "object": "bottle_of_pop-xmjfcg",
        "message": "CATEGORY: Confirm object category assignment.\n\nObject assigned to category: bottle_of_pop\n\nIf the object is not compatible with the rest of the objects in this category,\n(e.g. tabletop sink vs regular sink), change the category here.\nConfirm that the object is the same kind of object as the rest of the objects\nin this category.\n\nIf the category is wrong, please type in the correct category.",
        "complaint": "can_of_soda",
        "processed": false,
        "new": true
    },
    {
        "object": "bottle_of_tonic-hpddkk",
        "message": "APPEARANCE: Confirm object visual appearance.\nRequirements:\n- make sure the object has a valid texture or appearance (e.g., texture not black,\n       transparency rendered correctly, etc).\n- make sure any glass parts are transparent (would this object contain glass? e.g.\n       wall pictures, clocks, etc. - anything wrong)\n- compare the object against the 3ds Max image that should open up now.",
        "complaint": "not transparent",
        "processed": false,
        "new": true
    },
    {
        "object": "bottle_of_tonic-zblovn",
        "message": "APPEARANCE: Confirm object visual appearance.\nRequirements:\n- make sure the object has a valid texture or appearance (e.g., texture not black,\n       transparency rendered correctly, etc).\n- make sure any glass parts are transparent (would this object contain glass? e.g.\n       wall pictures, clocks, etc. - anything wrong)\n- compare the object against the 3ds Max image that should open up now.",
        "complaint": "not transparent",
        "processed": false,
        "new": true
    },
    {
        "object": "box_of_apple_juice-zjzgjy",
        "message": "APPEARANCE: Confirm object visual appearance.\nRequirements:\n- make sure the object has a valid texture or appearance (e.g., texture not black,\n       transparency rendered correctly, etc).\n- make sure any glass parts are transparent (would this object contain glass? e.g.\n       wall pictures, clocks, etc. - anything wrong)\n- compare the object against the 3ds Max image that should open up now.",
        "complaint": "rendered poorly",
        "processed": false,
        "new": true
    },
    {
        "object": "canister-xchqhl",
        "message": "SYNSET: Confirm object synset assignment.\n\nObject assigned to synset: canister.n.02\nDefinition: metal container for storing dry foods such as tea or flour\n\nReminder: synset should match the object and not its contents.\n(e.g., orange_juice.n.01 is the fluid orange juice and not a bottle).\nFor containers, note that usable containers (e.g. ones that have an open cap and\ncan be filled should be assigned to x__bottle.n.01 etc. synsets/categories while\nnon-usable containers should be assigned to bottle__of__x.n.01 etc. synsets/categories).\n\nIf the synset is wrong, please type in the name of the correct synset the object\nshould be assigned to. In the next question also type in the correct category.",
        "complaint": "glass container?",
        "processed": false,
        "new": true
    },
    {
        "object": "canister-xchqhl",
        "message": "CATEGORY: Confirm object category assignment.\n\nObject assigned to category: canister\n\nIf the object is not compatible with the rest of the objects in this category,\n(e.g. tabletop sink vs regular sink), change the category here.\nConfirm that the object is the same kind of object as the rest of the objects\nin this category.\n\nIf the category is wrong, please type in the correct category.",
        "complaint": "glass container? is generic enough",
        "processed": false,
        "new": true
    },
    {
        "object": "ceilings-slfzmc",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "not watertight",
        "processed": true
    },
    {
        "object": "credit_card_terminal-bqpanz",
        "message": "ABILITIES: Confirm that this object can support all of the abilities seen below.\n\nAbilities to evaluate (subset of all abilities): \n    cloth: False\n    coldSource: False\n    fillable: True\n    heatSource: False\n    openable: False\n    particleApplier: False\n    particleRemover: False\n    particleSink: False\n    particleSource: False\n    toggleable: False\n\nIf this object looks like it should have some of these abilities flipped, please\nlist the abilities that we should flip for this object as a comma separated list.\nFor example, for an unopenable window you would put in 'openable'.",
        "complaint": "fillable",
        "processed": false,
        "new": true
    },
    {
        "object": "crock_pot-lspxjq",
        "message": "ABILITIES: Confirm that this object can support all of the abilities seen below.\n\nAbilities to evaluate (subset of all abilities): \n    cloth: False\n    coldSource: False\n    fillable: True\n    heatSource: False\n    openable: False\n    particleApplier: False\n    particleRemover: False\n    particleSink: False\n    particleSource: False\n    toggleable: True\n\nIf this object looks like it should have some of these abilities flipped, please\nlist the abilities that we should flip for this object as a comma separated list.\nFor example, for an unopenable window you would put in 'openable'.",
        "complaint": "heatSource",
        "processed": false,
        "new": true
    },
    {
        "object": "crock_pot-xdahvv",
        "message": "ABILITIES: Confirm that this object can support all of the abilities seen below.\n\nAbilities to evaluate (subset of all abilities): \n    cloth: False\n    coldSource: False\n    fillable: True\n    heatSource: False\n    openable: False\n    particleApplier: False\n    particleRemover: False\n    particleSink: False\n    particleSource: False\n    toggleable: True\n\nIf this object looks like it should have some of these abilities flipped, please\nlist the abilities that we should flip for this object as a comma separated list.\nFor example, for an unopenable window you would put in 'openable'.",
        "complaint": "heatSource",
        "processed": false,
        "new": true
    },
    {
        "object": "display_fridge-oddyhd",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "unconnected hulls",
        "processed": true
    },
    {
        "object": "display_fridge-oddyhd",
        "message": "ABILITIES: Confirm that this object can support all of the abilities seen below.\n\nAbilities to evaluate (subset of all abilities): \n    cloth: False\n    coldSource: True\n    fillable: True\n    heatSource: False\n    openable: True\n    particleApplier: False\n    particleRemover: False\n    particleSink: False\n    particleSource: False\n    toggleable: False\n\nIf this object looks like it should have some of these abilities flipped, please\nlist the abilities that we should flip for this object as a comma separated list.\nFor example, for an unopenable window you would put in 'openable'.",
        "complaint": "coldSource",
        "processed": false,
        "new": true
    },
    {
        "object": "display_fridge-wlxyjn",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "not watertight",
        "processed": true
    },
    {
        "object": "display_fridge-wlxyjn",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "unconnected hulls",
        "processed": true
    },
    {
        "object": "door-hgcxno",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "unconnected hulls",
        "processed": false
    },
    {
        "object": "drink_dispenser-midfat",
        "message": "ABILITIES: Confirm that this object can support all of the abilities seen below.\n\nAbilities to evaluate (subset of all abilities): \n    cloth: False\n    coldSource: False\n    fillable: False\n    heatSource: False\n    openable: False\n    particleApplier: True\n    particleRemover: False\n    particleSink: False\n    particleSource: False\n    toggleable: True\n\nIf this object looks like it should have some of these abilities flipped, please\nlist the abilities that we should flip for this object as a comma separated list.\nFor example, for an unopenable window you would put in 'openable'.",
        "complaint": "particleSource, particleApplier",
        "processed": false,
        "new": true
    },
    {
        "object": "drink_dispenser-zgvhru",
        "message": "ABILITIES: Confirm that this object can support all of the abilities seen below.\n\nAbilities to evaluate (subset of all abilities): \n    cloth: False\n    coldSource: False\n    fillable: False\n    heatSource: False\n    openable: False\n    particleApplier: True\n    particleRemover: False\n    particleSink: False\n    particleSource: False\n    toggleable: True\n\nIf this object looks like it should have some of these abilities flipped, please\nlist the abilities that we should flip for this object as a comma separated list.\nFor example, for an unopenable window you would put in 'openable'.",
        "complaint": "particleSource, particleApplier",
        "processed": false,
        "new": true
    },
    {
        "object": "coffee_maker-xybbzt",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "does not moddel front correctly",
        "processed": false
    },
    {
        "object": "espresso_machine-xybbzt",
        "message": "ABILITIES: Confirm that this object can support all of the abilities seen below.\n\nAbilities to evaluate (subset of all abilities): \n    cloth: False\n    coldSource: False\n    fillable: False\n    heatSource: True\n    openable: False\n    particleApplier: False\n    particleRemover: False\n    particleSink: False\n    particleSource: False\n    toggleable: True\n\nIf this object looks like it should have some of these abilities flipped, please\nlist the abilities that we should flip for this object as a comma separated list.\nFor example, for an unopenable window you would put in 'openable'.",
        "complaint": "heatSource",
        "processed": false,
        "new": true
    },
    {
        "object": "fire_extinguisher-xqtkxb",
        "message": "ABILITIES: Confirm that this object can support all of the abilities seen below.\n\nAbilities to evaluate (subset of all abilities): \n    cloth: False\n    coldSource: False\n    fillable: False\n    heatSource: False\n    openable: False\n    particleApplier: False\n    particleRemover: False\n    particleSink: False\n    particleSource: False\n    toggleable: True\n\nIf this object looks like it should have some of these abilities flipped, please\nlist the abilities that we should flip for this object as a comma separated list.\nFor example, for an unopenable window you would put in 'openable'.",
        "complaint": "particleApplier",
        "processed": false,
        "new": true
    },
    {
        "object": "freezer-aayduy",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "not watertight",
        "processed": false
    },
    {
        "object": "fridge-dxwbae",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "no handle",
        "processed": true
    },
    {
        "object": "fridge-dxwbae",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "not watertight",
        "processed": true
    },
    {
        "object": "fridge-dxwbae",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "do by hand",
        "processed": true
    },
    {
        "object": "grocery_shelf-duckhq",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "wensi: uneven back",
        "processed": true
    },
    {
        "object": "grocery_shelf-pbjodr",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "maybe hand-annotate: too many meshes",
        "processed": true
    },
    {
        "object": "lid-cofhlg",
        "message": "CATEGORY: Confirm object category assignment.\n\nObject assigned to category: lid\n\nIf the object is not compatible with the rest of the objects in this category,\n(e.g. tabletop sink vs regular sink), change the category here.\nConfirm that the object is the same kind of object as the rest of the objects\nin this category.\n\nIf the category is wrong, please type in the correct category.",
        "complaint": "pot_lid",
        "processed": false,
        "new": true
    },
    {
        "object": "lid-vgvkps",
        "message": "APPEARANCE: Confirm object visual appearance.\nRequirements:\n- make sure the object has a valid texture or appearance (e.g., texture not black,\n       transparency rendered correctly, etc).\n- make sure any glass parts are transparent (would this object contain glass? e.g.\n       wall pictures, clocks, etc. - anything wrong)\n- compare the object against the 3ds Max image that should open up now.",
        "complaint": "handle should not be glass. but looks fine",
        "processed": false,
        "new": true
    },
    {
        "object": "magazine_rack-apfdcj",
        "message": "SYNSET: Confirm object synset assignment.\n\nObject assigned to synset: magazine_rack.n.01\nDefinition: a rack for displaying magazines\n\nReminder: synset should match the object and not its contents.\n(e.g., orange_juice.n.01 is the fluid orange juice and not a bottle).\nFor containers, note that usable containers (e.g. ones that have an open cap and\ncan be filled should be assigned to x__bottle.n.01 etc. synsets/categories while\nnon-usable containers should be assigned to bottle__of__x.n.01 etc. synsets/categories).\n\nIf the synset is wrong, please type in the name of the correct synset the object\nshould be assigned to. In the next question also type in the correct category.",
        "complaint": "\u001b[6~\u001b[6~\u001b[6~",
        "processed": false,
        "new": true
    },
    {
        "object": "magazine_rack-arrjbg",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "wensi: slanted surface",
        "processed": true
    },
    {
        "object": "oden_cooker-fjpams",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "does not model cup to be fillable",
        "processed": true
    },
    {
        "object": "oden_cooker-fjpams",
        "message": "ABILITIES: Confirm that this object can support all of the abilities seen below.\n\nAbilities to evaluate (subset of all abilities): \n    cloth: False\n    coldSource: False\n    fillable: False\n    heatSource: False\n    openable: False\n    particleApplier: False\n    particleRemover: False\n    particleSink: False\n    particleSource: False\n    toggleable: True\n\nIf this object looks like it should have some of these abilities flipped, please\nlist the abilities that we should flip for this object as a comma separated list.\nFor example, for an unopenable window you would put in 'openable'.",
        "complaint": "fillable,toggleable",
        "processed": false,
        "new": true
    },
    {
        "object": "pedestal_table-tdpuit",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "not watertight",
        "processed": true
    },
    {
        "object": "photocopier-hemqez",
        "message": "APPEARANCE: Confirm object visual appearance.\nRequirements:\n- make sure the object has a valid texture or appearance (e.g., texture not black,\n       transparency rendered correctly, etc).\n- make sure any glass parts are transparent (would this object contain glass? e.g.\n       wall pictures, clocks, etc. - anything wrong)\n- compare the object against the 3ds Max image that should open up now.",
        "complaint": "center of mass needs to be annotated",
        "processed": false,
        "new": true
    },
    {
        "object": "place_mat-nxzfmz",
        "message": "SYNSET: Confirm object synset assignment.\n\nObject assigned to synset: place_mat.n.01\nDefinition: a mat serving as table linen for an individual place setting\n\nReminder: synset should match the object and not its contents.\n(e.g., orange_juice.n.01 is the fluid orange juice and not a bottle).\nFor containers, note that usable containers (e.g. ones that have an open cap and\ncan be filled should be assigned to x__bottle.n.01 etc. synsets/categories while\nnon-usable containers should be assigned to bottle__of__x.n.01 etc. synsets/categories).\n\nIf the synset is wrong, please type in the name of the correct synset the object\nshould be assigned to. In the next question also type in the correct category.",
        "complaint": "--",
        "processed": false,
        "new": true
    },
    {
        "object": "place_mat-nxzfmz",
        "message": "ABILITIES: Confirm that this object can support all of the abilities seen below.\n\nAbilities to evaluate (subset of all abilities): \n    cloth: False\n    coldSource: False\n    fillable: False\n    heatSource: False\n    openable: False\n    particleApplier: False\n    particleRemover: True\n    particleSink: False\n    particleSource: False\n    toggleable: False\n\nIf this object looks like it should have some of these abilities flipped, please\nlist the abilities that we should flip for this object as a comma separated list.\nFor example, for an unopenable window you would put in 'openable'.",
        "complaint": "particleRemover",
        "processed": false,
        "new": true
    },
    {
        "object": "counter-kjmhgc",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "lip",
        "processed": true
    },
    {
        "object": "reception_desk-kjmhgc",
        "message": "APPEARANCE: Confirm object visual appearance.\nRequirements:\n- make sure the object has a valid texture or appearance (e.g., texture not black,\n       transparency rendered correctly, etc).\n- make sure any glass parts are transparent (would this object contain glass? e.g.\n       wall pictures, clocks, etc. - anything wrong)\n- compare the object against the 3ds Max image that should open up now.",
        "complaint": "missing back face",
        "processed": false,
        "new": true
    },
    {
        "object": "reception_desk-qztpgl",
        "message": "APPEARANCE: Confirm object visual appearance.\nRequirements:\n- make sure the object has a valid texture or appearance (e.g., texture not black,\n       transparency rendered correctly, etc).\n- make sure any glass parts are transparent (would this object contain glass? e.g.\n       wall pictures, clocks, etc. - anything wrong)\n- compare the object against the 3ds Max image that should open up now.",
        "complaint": "missing back face",
        "processed": false,
        "new": true
    },
    {
        "object": "shopping_basket-vsxhsv",
        "message": "SYNSET: Confirm object synset assignment.\n\nObject assigned to synset: shopping_basket.n.01\nDefinition: a handbasket used to carry goods while shopping\n\nReminder: synset should match the object and not its contents.\n(e.g., orange_juice.n.01 is the fluid orange juice and not a bottle).\nFor containers, note that usable containers (e.g. ones that have an open cap and\ncan be filled should be assigned to x__bottle.n.01 etc. synsets/categories while\nnon-usable containers should be assigned to bottle__of__x.n.01 etc. synsets/categories).\n\nIf the synset is wrong, please type in the name of the correct synset the object\nshould be assigned to. In the next question also type in the correct category.",
        "complaint": "3311*.",
        "processed": false,
        "new": true
    },
    {
        "object": "snack_rack-ytrmpz",
        "message": "SYNSET: Confirm object synset assignment.\n\nObject assigned to synset: snack_rack.n.01 (custom synset)\nDefinition: (hypernyms: rack.n.01): framework for holding objects\n\nReminder: synset should match the object and not its contents.\n(e.g., orange_juice.n.01 is the fluid orange juice and not a bottle).\nFor containers, note that usable containers (e.g. ones that have an open cap and\ncan be filled should be assigned to x__bottle.n.01 etc. synsets/categories while\nnon-usable containers should be assigned to bottle__of__x.n.01 etc. synsets/categories).\n\nIf the synset is wrong, please type in the name of the correct synset the object\nshould be assigned to. In the next question also type in the correct category.",
        "complaint": "store_rack? seems generic for not just snacks",
        "processed": false,
        "new": true
    },
    {
        "object": "snack_rack-ytrmpz",
        "message": "CATEGORY: Confirm object category assignment.\n\nObject assigned to category: snack_rack\n\nIf the object is not compatible with the rest of the objects in this category,\n(e.g. tabletop sink vs regular sink), change the category here.\nConfirm that the object is the same kind of object as the rest of the objects\nin this category.\n\nIf the category is wrong, please type in the correct category.",
        "complaint": "store_rack?",
        "processed": false,
        "new": true
    },
    {
        "object": "soft_roll-jelruc",
        "message": "SUBSTANCE: Confirm if object should be a rigid body, cloth, or substance.\nIf it's marked softBody or rope, that means it will be a rigid body for now, which is OK.\n\nCurrently, it is annotated as: rigidBody.\n\nEnter one of \"rigidBody\", \"liquid\", \"macroPhysicalSubstance\", \"microPhysicalSubstance\", \"visualSubstance\", \"cloth\", \"softBody\", \"rope\" to change.",
        "complaint": "softBody",
        "processed": false,
        "new": true
    },
    {
        "object": "soft_roll-ogaivq",
        "message": "SUBSTANCE: Confirm if object should be a rigid body, cloth, or substance.\nIf it's marked softBody or rope, that means it will be a rigid body for now, which is OK.\n\nCurrently, it is annotated as: rigidBody.\n\nEnter one of \"rigidBody\", \"liquid\", \"macroPhysicalSubstance\", \"microPhysicalSubstance\", \"visualSubstance\", \"cloth\", \"softBody\", \"rope\" to change.",
        "complaint": "softBody",
        "processed": false,
        "new": true
    },
    {
        "object": "square_light-ojaviq",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "not watertight",
        "processed": true
    },
    {
        "object": "tray-hbjdlb",
        "message": "ABILITIES: Confirm that this object can support all of the abilities seen below.\n\nAbilities to evaluate (subset of all abilities): \n    cloth: False\n    coldSource: False\n    fillable: True\n    heatSource: False\n    openable: False\n    particleApplier: False\n    particleRemover: False\n    particleSink: False\n    particleSource: False\n    toggleable: False\n\nIf this object looks like it should have some of these abilities flipped, please\nlist the abilities that we should flip for this object as a comma separated list.\nFor example, for an unopenable window you would put in 'openable'.",
        "complaint": "fillable",
        "processed": false,
        "new": true
    },
    {
        "object": "umbrella_rack-lttkuq",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "unstable mesh",
        "processed": true
    },
    {
        "object": "water_cooler-nqmdal",
        "message": "ABILITIES: Confirm that this object can support all of the abilities seen below.\n\nAbilities to evaluate (subset of all abilities): \n    cloth: False\n    coldSource: False\n    fillable: False\n    heatSource: False\n    openable: False\n    particleApplier: False\n    particleRemover: False\n    particleSink: False\n    particleSource: False\n    toggleable: True\n\nIf this object looks like it should have some of these abilities flipped, please\nlist the abilities that we should flip for this object as a comma separated list.\nFor example, for an unopenable window you would put in 'openable'.",
        "complaint": "particleSource",
        "processed": false,
        "new": true
    },
    {
        "object": "window-xjyvwx",
        "message": "Was at least one of the collision mesh candidates acceptable?",
        "complaint": "not watertight",
        "processed": true
    },
    {
        "object": "window-xjyvwx",
        "message": "ABILITIES: Confirm that this object can support all of the abilities seen below.\n\nAbilities to evaluate (subset of all abilities): \n    cloth: False\n    coldSource: False\n    fillable: False\n    heatSource: False\n    openable: True\n    particleApplier: False\n    particleRemover: False\n    particleSink: False\n    particleSource: False\n    toggleable: False\n\nIf this object looks like it should have some of these abilities flipped, please\nlist the abilities that we should flip for this object as a comma separated list.\nFor example, for an unopenable window you would put in 'openable'.",
        "complaint": "openable",
        "processed": false,
        "new": true
    },
    {
        "object": "floors-rojznj",
        "message": "STRUCTURE-THICKNESS: This object is a paper-thin floor or wall that should have some thickness.",
        "complaint": "See message",
        "processed": false,
        "new": true
    }
]